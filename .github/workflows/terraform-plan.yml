name: Terraform Plan

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

env:
  AWS_REGION: eu-central-1
  TF_VERSION: 1.7.4

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file=terraform.tfvars -out=tfplan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

      - name: Terraform Show
        working-directory: ./terraform
        run: terraform show -no-color tfplan > tfplan.txt

      - name: Add Plan to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('./terraform/tfplan.txt', 'utf8');
            const maxGithubBodyLength = 65536;
            
            let planSummary;
            if (plan.length > maxGithubBodyLength) {
              // If the plan is too large, truncate it
              planSummary = plan.substring(0, maxGithubBodyLength - 3000) + 
                            "\n\n... [Truncated due to GitHub comment size limit] ...\n\n" +
                            plan.substring(plan.length - 3000);
            } else {
              planSummary = plan;
            }
            
            const comment = `## Terraform Plan
            
            <details><summary>Show Plan</summary>
            
            \`\`\`terraform
            ${planSummary}
            \`\`\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });